version: '3'

services:
##
## CONTAINER for Database Setup
## to test service run:
##     docker-compose up --build -d client
## ----------------------------------------
  # database:
  #   build: ./docker-services/database

##
## CONTAINER for Server Setup
## Requires:
##     .env
##         APP_SERVER_PORT=5000
##         API_HOST=5000
## to test service individually run:
##     docker-compose up --build -d server
## ----------------------------------------
  server:
    build:
      context: ./
      dockerfile: ./server
    environment:
      # - APP_HOST=${API_HOST}
      - APP_SERVER_PORT=${APP_SERVER_PORT}
      - NODE_ENV=${NODE_ENV}
    ports:
      - ${APP_SERVER_PORT}:${APP_SERVER_PORT} # expose ports - HOST:CONTAINER
    volumes:
      - ./server:/app/server
      - /app/server/node_modules
    command: npm run server

##
## CONTAINER for Client Setup
## Requires:
##     .env
##         REACT_APP_PORT=3000
## to test service individually run:
##     docker-compose up --build -d client
## ----------------------------------------
  client:
    build:
      context: ./
      dockerfile: ./client
    environment:
      - REACT_APP_PORT=${REACT_APP_PORT}
      - CHOKIDAR_USEPOLLING=true # help with watch events in VM (https://create-react-app.dev/docs/advanced-configuration)
      - NODE_ENV=${NODE_ENV}
    ports:
      - ${REACT_APP_PORT}:${REACT_APP_PORT} # expose ports - HOST:CONTAINER
    volumes:
      - './client:/app/client/'
      - '/app/client/node_modules'
    depends_on:
      - server
    links:
      - server
    command: npm run client
